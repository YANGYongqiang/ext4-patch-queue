diff --git a/fs/ext4/resize.c b/fs/ext4/resize.c
index b73be2b..2c6683f 100644
--- a/fs/ext4/resize.c
+++ b/fs/ext4/resize.c
@@ -767,44 +767,56 @@ exit_err:
 }
 
 /*
- * ext4_add_new_desc() adds group descriptor of group @group
+ * ext4_add_new_desc() adds @count group descriptors stating at @group
+ *  to a filesystem.
  *
  * @handle: journal handle
  * @sb; super block
  * @group: the group no. of the first group desc to be added
+ * @count: the number of groups to be added
  * @resize_inode: the resize inode
  */
 static int ext4_add_new_desc(handle_t *handle, struct super_block *sb,
-			     ext4_group_t group, struct inode *resize_inode)
+			     ext4_group_t group, ext4_group_t count,
+			     struct inode *resize_inode)
 {
 	struct ext4_sb_info *sbi = EXT4_SB(sb);
-	struct ext4_super_block *es = sbi->s_es;
+	ext4_group_t group_end;
 	struct buffer_head *gdb_bh;
-	int gdb_off, gdb_num, err = 0;
-	int reserved_gdb = ext4_bg_has_super(sb, group) ?
-		le16_to_cpu(es->s_reserved_gdt_blocks) : 0;
+	int reserved_gdb, err = 0;
+	int gdb_num_begin, gdb_num_end, gdb_num, gdb_off;
 
+	group_end  = group + count - 1;
+	gdb_num_begin = group / EXT4_DESC_PER_BLOCK(sb);
 	gdb_off = group % EXT4_DESC_PER_BLOCK(sb);
-	gdb_num = group / EXT4_DESC_PER_BLOCK(sb);
+	gdb_num_end = group_end / EXT4_DESC_PER_BLOCK(sb);
 
-        /*
-         * We will only either add reserved group blocks to a backup group
-         * or remove reserved blocks for the first group in a new group block.
-         * Doing both would be mean more complex code, and sane people don't
-         * use non-sparse filesystems anymore.  This is already checked above.
-         */
-	if (gdb_off) {
+	BUG_ON(group != sbi->s_groups_count);
+
+	gdb_num = gdb_off ? gdb_num_begin + 1 : gdb_num_begin;
+	for (; gdb_num <= gdb_num_end; gdb_num++) {
+		err = add_new_gdb(handle, resize_inode, gdb_num);
+		if (err)
+			return err;
+	}
+
+	for (; group <= group_end; group++) {
+		struct ext4_super_block *es = EXT4_SB(sb)->s_es;
+		gdb_num = group / EXT4_DESC_PER_BLOCK(sb);
 		gdb_bh = sbi->s_group_desc[gdb_num];
 		err = ext4_journal_get_write_access(handle, gdb_bh);
 		if (err)
-			goto out;
+			return err;
 
-		if (reserved_gdb && ext4_bg_num_gdb(sb, group))
+		reserved_gdb = ext4_bg_has_super(sb, group) ?
+				le16_to_cpu(es->s_reserved_gdt_blocks) : 0;
+		if (reserved_gdb && ext4_bg_num_gdb(sb, group)) {
 			err = reserve_backup_gdb(handle, resize_inode, group);
-	} else
-		err = add_new_gdb(handle, resize_inode, group);
+			if (err)
+				return err;
+		}
+	}
 
-out:
 	return err;
 }
 
